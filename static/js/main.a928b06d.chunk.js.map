{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newString","replace","trim","split","filter","element","defaultProps","aboutText","Alert","height","alert","class","role","word","lower","charAt","slice","captilize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a928b06d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                            <Link className=\"nav-link\" href=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About',\r\n};\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpClick  = () =>{\r\n        // console.log('Uppercase was clicked' + text);\r\n        let newText = text.toUpperCase(); \r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\")\r\n    }\r\n    const handleLoClick  = () =>{\r\n        // console.log('Uppercase was clicked' + text);\r\n        let newText = text.toLowerCase(); \r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\")\r\n        props.showAlert(\"Converted to Lowercase\", \"success\")\r\n    }\r\n\r\n    const handleClearClick  = () =>{\r\n        // console.log('Uppercase was clicked' + text);\r\n        let newText = ''; \r\n        setText(newText);\r\n        props.showAlert(\"Cleared Text\", \"success\")\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied Text\", \"success\")\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newString = text.replace(/\\s+/g,' ').trim();\r\n        setText(newString);\r\n        props.showAlert(\"Removed Extra Spaces\", \"success\")\r\n    }\r\n\r\n    const handleOnChange  = (event) =>{\r\n        // console.log('On Change');\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n    // text = \"newTest\"; //Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n            <h1 className='mb-2'>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").filter((element) => {return element.length !== 0;}).length} words and {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").filter((element) => {return element.length !== 0;}).length} Minutes of Read</p>\r\n             <h2>Preview</h2>\r\n             <p>{text.length>0?text:\"Nothing to Preview !\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n    const captilize = (word) => {\r\n\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height : '50px'}}>\r\n\r\n        {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{captilize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\n// import About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n// } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); // whether dark mode is enables or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 1500)\r\n  }\r\n\r\n  const toggleMode = () => {\r\n    if (mode === 'light') {\r\n\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n\r\n      // document.title = \"TextUtils - Dark Mode\"\r\n    }\r\n    else {\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n      // document.title = \"TextUtils - Light Mode\"\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\r\n      {/* <Navbar /> */}\r\n      {/* <Router> */}\r\n\r\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n        <Alert alert={alert} />\r\n        <div className=\"container my-3\">\r\n          {/* <Switch> */}\r\n            {/* <Route exact path=\"/about\"> */}\r\n              {/* <About /> */}\r\n            {/* </Route> */}\r\n            {/* <Route exact path=\"/\"> */}\r\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\r\n            {/* </Route> */}\r\n          {/* </Switch> */}\r\n        </div>\r\n      {/* </Router> */}\r\n\r\n      {/* <About/> */}\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}